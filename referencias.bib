@article{Janikow1991,
author = {Janikow, Cezary Z. and Michalewicz, Zbigniew},
file = {:C$\backslash$:/Users/elton/Desktop/dissertacao/artigos/comparing binary and floating point.pdf:pdf},
journal = {undefined},
title = {{An Experimental Comparison of Binary and Floating Point Representations in Genetic Algorithms}},
year = {1991}
}
@article{Johansson2015,
abstract = {Mycotoxins are small (MW approximately 700), toxic chemical products formed as secondary metabolites by a few fungal species that readily colonise crops and contaminate them with toxins in the field or after harvest. Ochratoxins and Aflatoxins are mycotoxins of major significance and hence there has been significant research on broad range of analytical and detection techniques that could be useful and practical. Due to the variety of structures of these toxins, it is impossible to use one standard technique for analysis and/or detection. Practical requirements for high-sensitivity analysis and the need for a specialist laboratory setting create challenges for routine analysis. Several existing analytical techniques, which offer flexible and broad-based methods of analysis and in some cases detection, have been discussed in this manuscript. There are a number of methods used, of which many are lab-based, but to our knowledge there seems to be no single technique that stands out above the rest, although analytical liquid chromatography, commonly linked with mass spectroscopy is likely to be popular. This review manuscript discusses (a) sample pre-treatment methods such as liquid-liquid extraction (LLE), supercritical fluid extraction (SFE), solid phase extraction (SPE), (b) separation methods such as (TLC), high performance liquid chromatography (HPLC), gas chromatography (GC), and capillary electrophoresis (CE) and (c) others such as ELISA. Further currents trends, advantages and disadvantages and future prospects of these methods have been discussed.},
author = {Johansson, Robert},
doi = {10.1007/978-1-4842-0553-2},
file = {:C$\backslash$:/Users/elton/Desktop/Numerical{\_}Python{\_}A{\_}Practical{\_}Techniques{\_}Approach{\_}f.pdf:pdf},
isbn = {9781484205532},
journal = {Numerical Python: A Practical Techniques Approach for Industry},
number = {April},
pages = {1--487},
title = {{Numerical python: A practical techniques approach for industry}},
volume = {70},
year = {2015}
}
@article{Lloyd1982,
author = {Lloyd, S.},
doi = {10.1109/TIT.1982.1056489},
issn = {0018-9448},
journal = {IEEE Transactions on Information Theory},
month = {mar},
number = {2},
pages = {129--137},
title = {{Least squares quantization in PCM}},
volume = {28},
year = {1982}
}
@incollection{Shewchuk1996,
author = {Shewchuk, Jonathan Richard},
doi = {10.1007/BFb0014497},
pages = {203--222},
publisher = {Springer, Berlin, Heidelberg},
title = {{Triangle: Engineering a 2D quality mesh generator and Delaunay triangulator}},
year = {1996}
}
@article{Golub1996,
abstract = {This paper describes the implementation details and compares two methods for optimisation of multi-dimensional cost functions. The implemented genetic algorithm uses two chromosome representations: binary and floating point. In both representations the algorithm is based on steady-state reproduction, roulette-wheel bad individuals selection and has the same parameters.},
author = {Golub, M},
file = {:C$\backslash$:/Users/elton/Desktop/dissertacao/artigos/iti96.pdf:pdf},
journal = {Proceedings of the 18th International Conference on {\ldots}},
keywords = {chromosome representation,genetic algorithm,steady-state reproduction},
pages = {1--6},
title = {{An implementation of binary and floating point chromosome representation in genetic algorithm}},
year = {1996}
}
@article{Shewchuk2002,
abstract = {Delaunay refinement is a technique for generating unstructured meshes of triangles for use in interpolation, the finite element method, and the finite volume method. In theory and practice, meshes produced by Delaunay refinement satisfy guaranteed bounds on angles, edge lengths, the number of triangles, and the grading of triangles from small to large sizes. This article presents an intuitive framework for analyzing Delaunay refinement algorithms that unifies the pioneering mesh generation algorithms of L. Paul Chew and Jim Ruppert, improves the algorithms in several minor ways, and most importantly, helps to solve the difficult problem of meshing nonmanifold domains with small angles. Although small angles inherent in the input geometry cannot be removed, one would like to triangulate a domain without creating any new small angles. Unfortunately, this problem is not always soluble. A compromise is necessary. A Delaunay refinement algorithm is presented that can create a mesh in which most angles are 30°or greater and no angle is smaller than arcsin[(3/2)sin($\phi$/ 2)]∼(3/4)$\phi$, where $\phi$≤60°is the smallest angle separating two segments of the input domain. New angles smaller than 30°appear only near input angles smaller than 60°. In practice, the algorithm's performance is better than these bounds suggest. Another new result is that Ruppert's analysis technique can be used to reanalyze one of Chew's algorithms. Chew proved that his algorithm produces no angle smaller than 30°(barring small input angles), but without any guarantees on grading or number of triangles. He conjectures that his algorithm offers such guarantees. His conjecture is conditionally confirmed here: if the angle bound is relaxed to less than 26.5°, Chew's algorithm produces meshes (of domains without small input angles) that are nicely graded and size-optimal. {\textcopyright} 2014 Published by Elsevier B.V.},
author = {Shewchuk, Jonathan Richard},
doi = {10.1016/j.comgeo.2014.02.005},
file = {:C$\backslash$:/Users/elton/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Shewchuk - 2002 - Delaunay refinement algorithms for triangular mesh generation.pdf:pdf},
issn = {09257721},
journal = {Computational Geometry: Theory and Applications},
keywords = {Computational geometry,Constrained Delaunay triangulation,Delaunay refinement,Delaunay triangulation,Triangular mesh generation},
month = {may},
number = {7},
pages = {741--778},
publisher = {Elsevier},
title = {{Reprint of: Delaunay refinement algorithms for triangular mesh generation}},
volume = {47},
year = {2014}
}
@book{Lin1996,
abstract = {Anthology selected from contributions to the First ACM Workshop on Applied Computational Geometry. How solid is solid modeling? / Christoph M. Hoffmann -- Robustness issues in geometric algorithms / Steven Fortune -- Implementing geometric algorithms robustly / Leonidas J. Guibas -- Robustness in geometric algorithms / Franco P. Preparata -- Applications of computational geometry in mechanical engineering design and manufacture / Michael J. Pratt -- On some applications of computational geometry in manufacturing and virtual environments / Joseph S.B. Mitchell -- Visualizing geometric algorithms : state of the art / David Dobkin -- Geometric algorithm visualization, current status and future / D.T. Lee -- Position paper for panel discussion / Kurt Mehlhorn -- Designing the Computational Geometry Algorithm Library CGAL / Mark H. Overmars -- The Computational Geometry Impact Task Force report : an executive summary / Bernard Chazelle -- Geometric manipulation of flexible ligands / Paul W. Finn [and others] -- Ray-representation formalism for geometric computations on protein solid models / Michael G. Prisant -- Column-based strip packing using ordered and compliant containment / Karen Daniels and Victor J. Milenkovic -- Computing a flattest, undercut-free parting line for a convex polyhedron, with application to mold design / Jayanth Majhi, Prosenjit Gupta, and Ravi Janardan -- Geometric problems in machine learning / David Dobkin and Dimitrios Gunopulos -- Matching convex polygons and polyhedra, allowing for occlusion / Ronen Basri and David Jacobs -- Stably placing piecewise smooth objects / Chao-Kuei Hung and Doug Ierardi -- A beam-tracing algorithm for prediction of indoor radio propagation / Steven Fortune -- Extracting geometric information from architectural drawings / Brian W. Kernighan and Christopher J. Van Wyk -- Using the visibility complex for radiosity computation / Rachel Orti [and others] -- The CGAL kernel : a basis for geometric computation / Andreas Fabri [and others] -- Triangle : engineering a 2D quality mesh generator and Delaunay triangulator / Jonathan Richar Shewchuk.},
author = {Lin, Ming C. and Manocha, Dinesh N. and {ACM Workshop on Applied Computational Geometry (1st : 1996 : Philadelphia}, Pa.)},
isbn = {9783540617853},
pages = {222},
publisher = {Springer},
title = {{Applied computational geometry : towards geometric engineering : FCRC '96 Workshop, WACG '96, Philadelphia, PA, May 27-28, 1996 : selected papers}},
year = {1996}
}
@book{Edition,
author = {Edition, Sixth},
file = {:C$\backslash$:/Users/elton/Desktop/dissertacao/livros/Pijush K. Kundu, Ira M. Cohen, David R Dowling - Fluid Mechanics (2015, Academic Press).pdf:pdf},
isbn = {9780124059351},
title = {{Pijush K. Kundu, Ira M. Cohen, David R Dowling-Fluid Mechanics}}
}
@article{Chen2011,
abstract = {In this paper, several mesh optimization schemes based on Optimal Delaunay Triangulations are developed. High-quality meshes are obtained by minimizing the interpolation error in the weighted L1 norm. Our schemes are divided into classes of local and global schemes. For local schemes, several old and new schemes, known as mesh smoothing, are derived from our approach. For global schemes, a graph Laplacian is used in a modified Newton iteration to speed up the local approach. Our work provides a mathematical foundation for a number of mesh smoothing schemes often used in practice, and leads to a new global mesh optimization scheme. Numerical experiments indicate that our methods can produce well-shaped triangulations in a robust and efficient way. {\textcopyright} 2010 Elsevier B.V.},
author = {Chen, Long and Holst, Michael},
doi = {10.1016/j.cma.2010.11.007},
file = {:C$\backslash$:/Users/elton/Desktop/dissertacao/artigos/Chen.L$\backslash$;Holst.M2010.pdf:pdf},
issn = {00457825},
journal = {Computer Methods in Applied Mechanics and Engineering},
keywords = {Delaunay triangulation,Mesh generation,Mesh optimization,Mesh smoothing,Optimal Delaunay Triangulation},
month = {feb},
number = {9-12},
pages = {967--984},
publisher = {North-Holland},
title = {{Efficient mesh optimization schemes based on Optimal Delaunay Triangulations}},
volume = {200},
year = {2011}
}
@article{Kumar2010,
abstract = {Genetic algorithms are considered as a search process used in computing to find exact or a approximate solution for optimization and search problems. There are also termed as global search heuristics. These techniques are inspired by evolutionary biology such as inheritance mutation, selection and cross over. These algorithms provide a technique for program to automatically improve their parameters. This paper is an introduction of genetic algorithm approach including various applications and described the integration of genetic algorithm with object oriented programming approaches.},
author = {Kumar, Manoj and Husian, Mohammad and Upreti, Naveen and Gupta, Deepti},
journal = {International Journal of Information Techonology and Knowledge Management},
keywords = {Chromosome,Evolutionary Algorithm,Genetic Algorithm,Mutation,Selection},
title = {{GENETIC ALGORITHM: REVIEW AND APPLICATION}},
year = {2010}
}
@article{DeJong1975,
abstract = {Cylindrical porous-coated implants were placed in the distal femoral metaphyses of twenty dogs and were subjected to zero, twenty, forty, or 150 micrometers of oscillatory motion for eight hours each day for six weeks with use of a specially designed loading apparatus. The in vivo skeletal responses to the different magnitudes of relative motion were evaluated. Histological analysis demonstrated growth of bone into the porous coatings of all of the implants, including those that had been subjected to 150 micrometers of motion. However, the ingrown bone was in continuity with the surrounding bone only in the groups of implants that had not been subjected to motion or that had been subjected to twenty micrometers of motion; in contrast, the implants that had been subjected to forty micrometers of motion were surrounded in part by trabecular bone but also in part by fibrocartilage and fibrous tissue, and those that had been subjected to 150 micrometers of motion were surrounded by dense fibrous tissue. Trabecular microfractures were identified around three of the five implants that had been subjected to forty micrometers of motion and around four of the five that had been subjected to 150 micrometers of motion, suggesting that the ingrown bone had failed at the interface because of the large movements. The architecture of the surrounding trabecular bone also was altered by the micromotion of the implant. The implants that had stable ingrowth of bone were surrounded by a zone of trabecular atrophy, whereas those that had unstable ingrowth of bone were surrounded by a zone of trabecular hypertrophy. The trabeculae surrounding the fibrocartilage or fibrous tissue that had formed around the implants that had been subjected to forty or 150 micrometers of motion had been organized into a shell of dense bone tangential to the implant (that is, a neocortex outside the non-osseous tissue).},
author = {DeJong, K},
issn = {0021-9355},
journal = {University of Michigan},
pmid = {9160943},
title = {{The Analysis and behaviour of a Class of Genetic Adaptive Systems}},
year = {1975}
}
@incollection{Eiben2012,
abstract = {An abstract is not available.},
author = {Eiben, A. E. and Rau{\'{e}}, P. -E. and Ruttkay, Zs.},
doi = {10.1007/3-540-58484-6_252},
pages = {78--87},
title = {{Genetic algorithms with multi-parent recombination}},
year = {2012}
}
@article{Harp1991,
author = {Harp, Steven A and Samad, Tariq},
journal = {Handbook of Genetic Algorithms},
pages = {202--221},
title = {{Genetic Synthesis of Neural Network Architecture}},
year = {1991}
}
@article{Loseille2017,
author = {Formaggia, L},
file = {:C$\backslash$:/Users/elton/Desktop/dissertacao/livros/Loseille-HandBook-MeshGeneration.pdf:pdf},
journal = {Zeitschrift Fur Angewandte Mathematik Und Mechanik},
title = {{Unstructured mesh generation and adaption}},
volume = {18},
year = {1996}
}
@article{Juretic2004,
author = {Juretic, Franjo},
file = {:C$\backslash$:/Users/elton/Desktop/dissertacao/livros/Error Analysis in Finite Volume.pdf:pdf},
title = {{Error Analysis in Finite Volume CFD}},
volume = {C},
year = {2004}
}
@article{Knupp1999,
abstract = {The Winslow equations from structured elliptic grid generation are adapted to smoothing of two-dimensional unstructured meshes using a ﬁnite difference approach. We use a local mapping from a uniform N-valent logical mesh to a local physical subdomain. Taylor Series expansions are then applied to compute the derivatives which appear in the Winslow equations. The resulting algorithm for Winslow smoothing on unstructured triangular and quadrilateral meshes gives generally superior qualilty than traditional Laplacian smoothing, while retaining the resistance to mesh folding on structured quadrilateral meshes.},
author = {Knupp, P. M.},
doi = {10.1007/s003660050021},
file = {:C$\backslash$:/Users/elton/Desktop/dissertacao/artigos/winslow smoothing on two-dimensional unstructured meshes.pdf:pdf},
issn = {01770667},
journal = {Engineering with Computers},
keywords = {elliptic smoothing,laplacian smoothing,quadrilateral meshing,unstructured grid generation},
number = {3},
pages = {263--268},
title = {{Winslow smoothing on two-dimensional unstructured meshes}},
volume = {15},
year = {1999}
}
@article{Thomas2008,
abstract = {New methodology for verification of finite volume computational methods using unstructured grids is presented. The discretization-order properties are studied in computational windows, easily constructed within a collection of grids or a single grid. Tests are performed within each window and address a combination of problem-, solution-, and discretization/grid-related features affecting discretization-error convergence. The windows can be adjusted to isolate particular elements of the computational scheme, such as the interior discretization, the boundary discretization, or singularities. Studies can use traditional grid-refinement computations within a fixed window or downscaling, a recently introduced technique in which computations are made within windows contracting toward a focal point of interest. Grids within the windows are constrained to be consistently refined, allowing a meaningful assessment of asymptotic error convergence on unstructured grids. Demonstrations of the method are shown, including a comparative accuracy assessment of commonly used schemes on general mixed grids and the identification of local accuracy deterioration at boundary intersections. Recommendations to enable attainment of design-order discretization errors for large-scale computational simulations are given.},
author = {Thomas, J. L. and Diskin, B. and Rumsey, C. L.},
doi = {10.2514/1.36655},
file = {:C$\backslash$:/Users/elton/Desktop/dissertacao/artigos/verification unstructured mesh solvers.pdf:pdf},
issn = {0001-1452},
journal = {AIAA Journal},
number = {12},
pages = {3070--3079},
title = {{Towards Verification of Unstructured-Grid Solvers}},
volume = {46},
year = {2008}
}
@article{Falsafioon2014a,
author = {Falsafioon, Mehdi and Arabi, Sina and Guibault, Francois and Camarero, Ricardo},
file = {:C$\backslash$:/Users/elton/Desktop/dissertacao/artigos/smoothing of unstructured grids.pdf:pdf},
keywords = {barycentric method,elliptic smoothing,local computational space,mesh generation,unstructured grids,winslow equation},
title = {{Smoothing of Unstructured Grids}},
year = {2014}
}
@article{Hadade2019,
abstract = {This paper presents a number of optimisations for improving the performance of unstructured computational fluid dynamics codes on multicore and manycore architectures such as the Intel Sandy Bridge, Broadwell and Skylake CPUs and the Intel Xeon Phi Knights Corner and Knights Landing manycore processors. We discuss and demonstrate their implementation in two distinct classes of computational kernels: face-based loops represented by the computation of fluxes and cell-based loops representing updates to state vectors. We present the importance of making efficient use of the underlying vector units in both classes of computational kernels with special emphasis on the changes required for vectorising face-based loops and their intrinsic indirect and irregular access patterns. We demonstrate the advantage of different data layouts for cell-centred as well as face data structures and architectural specific optimisations for improving the performance of gather and scatter operations which are prevalent in unstructured mesh applications. The implementation of a software prefetching strategy based on auto-tuning is also shown along with an empirical evaluation on the importance of multithreading for in-order architectures such as Knights Corner. We explore the various memory modes available on the Intel Xeon Phi Knights Landing architecture and present an approach whereby both traditional DRAM as well as MCDRAM interfaces are exploited for maximum performance. We obtain significant full application speed-ups between 2.8 and 3X across the multicore CPUs in two-socket node configurations, 8.6X on the Intel Xeon Phi Knights Corner coprocessor and 5.6X on the Intel Xeon Phi Knights Landing processor in an unstructured finite volume CFD code representative in size and complexity to an industrial application. Program summary: Program Title: some{\_}opt{\_}for{\_}unstructured{\_}cfd Program Files doi: http://dx.doi.org/10.17632/zyh2zkf3jw.1 Licensing provisions: GNU General Public License 3 (GPL) Programming language: C/C++ Nature of problem: The solution of fluid flow problems in the vicinity of complex geometries mandates the utilisation of unstructured grids. However, this flexibility of unstructured mesh methods in dealing with complicated geometries comes at a cost of increased difficulty in extracting high performance out of modern processors. We provide implementations for a number of optimisations useful for improving the performance of unstructured CFD codes on modern multicore and manycore architectures. Solution method: grid renumbering via Reverse Cuthill–Mckee, code transformations necessary for enabling vectorisation, face colouring/reordering for removing dependencies at the face end-points when accumulating residuals, data layout transformations for reducing cache misses, hand-tuned gather and scatter primitives for in-register transpositions, software prefetching via auto-tuning and multithreading for exploiting SMT features of modern processors.},
author = {Hadade, Ioan and Wang, Feng and Carnevale, Mauro and di Mare, Luca},
doi = {10.1016/j.cpc.2018.07.001},
file = {:C$\backslash$:/Users/elton/Desktop/dissertacao/artigos/some useful optimisations for unstructured computational fluid dynamics codes on multicore and manycore architectures.pdf:pdf},
issn = {00104655},
journal = {Computer Physics Communications},
keywords = {Code optimisation,Computational fluid dynamics,High performance computing,Parallel programming,Unstructured grids},
pages = {305--323},
publisher = {Elsevier B.V.},
title = {{Some useful optimisations for unstructured computational fluid dynamics codes on multicore and manycore architectures}},
volume = {235},
year = {2019}
}
@article{Sloan1993,
abstract = {A fast algorithm for generating constrained two-dimensional Delaunay triangulations is described. The scheme permits certain edges to be specified in the final triangulation, such as those that correspond to domain boundaries or natural interfaces, and is suitable for mesh generation and contour plotting applications. Detailed timing statistics indicate that its CPU time requirement is roughly proportional to the number of points in the data set. Subject to the conditions imposed by the edge constraints, the Delaunay scheme automatically avoids the formation of long thin triangles and thus gives high quality grids. A major advantage of the method is that it does not require extra points to be added to the data set in order to ensure that the specified edges are present. {\textcopyright} 1993.},
author = {Sloan, S. W.},
doi = {10.1016/0045-7949(93)90239-A},
file = {:C$\backslash$:/Users/elton/Desktop/dissertacao/artigos/generating-delaunay.pdf:pdf},
issn = {00457949},
journal = {Computers and Structures},
number = {3},
pages = {441--450},
title = {{A fast algorithm for generating constrained delaunay triangulations}},
volume = {47},
year = {1993}
}
@article{Beasley1993,
author = {Beasley, David},
file = {:C$\backslash$:/Users/elton/Desktop/dissertacao/artigos/ga{\_}overview1.pdf:pdf},
title = {{An Overview of Genetic Algorithms : Part 1 , Fundamentals}},
year = {1993}
}
@article{Shewchuk2014,
abstract = {Delaunay refinement is a technique for generating unstructured meshes of triangles for use in interpolation, the finite element method, and the finite volume method. In theory and practice, meshes produced by Delaunay refinement satisfy guaranteed bounds on angles, edge lengths, the number of triangles, and the grading of triangles from small to large sizes. This article presents an intuitive framework for analyzing Delaunay refinement algorithms that unifies the pioneering mesh generation algorithms of L. Paul Chew and Jim Ruppert, improves the algorithms in several minor ways, and most importantly, helps to solve the difficult problem of meshing nonmanifold domains with small angles. Although small angles inherent in the input geometry cannot be removed, one would like to triangulate a domain without creating any new small angles. Unfortunately, this problem is not always soluble. A compromise is necessary. A Delaunay refinement algorithm is presented that can create a mesh in which most angles are 30°or greater and no angle is smaller than arcsin[(3/2)sin($\phi$/ 2)]∼(3/4)$\phi$, where $\phi$≤60°is the smallest angle separating two segments of the input domain. New angles smaller than 30°appear only near input angles smaller than 60°. In practice, the algorithm's performance is better than these bounds suggest. Another new result is that Ruppert's analysis technique can be used to reanalyze one of Chew's algorithms. Chew proved that his algorithm produces no angle smaller than 30°(barring small input angles), but without any guarantees on grading or number of triangles. He conjectures that his algorithm offers such guarantees. His conjecture is conditionally confirmed here: if the angle bound is relaxed to less than 26.5°, Chew's algorithm produces meshes (of domains without small input angles) that are nicely graded and size-optimal. {\textcopyright} 2014 Published by Elsevier B.V.},
author = {Shewchuk, Jonathan Richard},
doi = {10.1016/j.comgeo.2014.02.005},
file = {:C$\backslash$:/Users/elton/Desktop/dissertacao/artigos/delaunay refinement algorithms for triangular mesh generation.pdf:pdf},
issn = {09257721},
journal = {Computational Geometry: Theory and Applications},
keywords = {Computational geometry,Constrained Delaunay triangulation,Delaunay refinement,Delaunay triangulation,Triangular mesh generation},
number = {7},
pages = {741--778},
publisher = {Elsevier B.V.},
title = {{Reprint of: Delaunay refinement algorithms for triangular mesh generation}},
volume = {47},
year = {2014}
}
@article{Falsafioon2014,
abstract = {{\textcopyright} Published under licence by IOP Publishing Ltd.In this paper two mesh smoothing techniques are applied to unstructured grids. These are based on the solution of elliptic equations, Laplace and Winslow. In the first case, the equations are solved by a barycentric averaging procedure, and a finite volume scheme is used for the second operator. The comparison of these two techniques are based on two quality measures, shape factor and minimum angle which both are local criteria. Also, a global quality smoothness criterion is introduced and used to assess global smoothing characteristics of these methods.},
author = {Falsafioon, Mehdi and Arabi, Sina and Camarero, Ricardo and Guibault, Francois},
doi = {10.1088/1755-1315/22/2/022020},
file = {:C$\backslash$:/Users/elton/Desktop/dissertacao/artigos/comparison of two mesh smoothing techniques for unstructured grids.pdf:pdf},
issn = {17551315},
journal = {IOP Conference Series: Earth and Environmental Science},
title = {{Comparison of Two Mesh Smoothing Techniques for Unstructured Grids}},
volume = {22},
year = {2013}
}
@book{NagleR.KentB.SaffEdwardDavidSnider2012,
author = {arthur {Nagle, R. Kent, B. Saff, Edward, David Snider}},
file = {:C$\backslash$:/Users/elton/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Nagle, R. Kent, B. Saff, Edward, David Snider - 2012 - Fundamentals of Differential Equations EIGHTH EDITION.pdf:pdf},
isbn = {10: 0-321-74773-7},
title = {{Fundamentals of Differential Equations EIGHTH EDITION}},
year = {2012}
}
@book{shiffman2012nature,
abstract = {How can we capture the unpredictable evolutionary and emergent properties of nature in software? How can understanding the mathematical principles behind our physical world help us to create digital worlds? This book focuses on a range of programming strategies and techniques behind computer simulations of natural systems, from elementary concepts in mathematics and physics to more advanced algorithms that enable sophisticated visual results. Readers will progress from building a basic physics engine to creating intelligent moving objects and complex systems, setting the foundation for further experiments in generative design. Subjects covered include forces, trigonometry, fractals, cellular automata, self-organization, and genetic algorithms. The book's examples are written in Processing, an open-source language and development environment built on top of the Java programming language. On the book's website (http: //www.natureofcode.com), the examples run in the browser via Processing's JavaScript mode.},
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
author = {Shiffman, Daniel},
booktitle = {The Nature of Code},
doi = {10.1017/CBO9781107415324.004},
eprint = {arXiv:1011.1669v3},
isbn = {978-0985930806},
issn = {19454589},
pages = {520},
pmid = {25246403},
title = {{The Nature of Code: Simulating Natural Systems with Processing}},
year = {2012}
}
@article{Jasak1996,
author = {Jasak, Hrvoje},
file = {:C$\backslash$:/Users/elton/Google Drive/dissertacao/artigos/Jasak{\_}PhD{\_}1996.pdf:pdf},
number = {June},
title = {{Error Analysis and Estimation for the Finite Volume Method with Applications to Fluid Flows}},
volume = {M},
year = {1996}
}
@article{Muzaferija2014,
author = {Muzaferija, Samir},
number = {May},
title = {{SamirMuzaferijaPhDthesis ADAPTIVE FINITE VOLUME METHOD FOR FLOW PREDICTION USING UNSTRUCTURED MESHES AND MULTIGRID APPROACH by Samir Muzaferija Theses submitted for the degree of Doctor of Philosophy of the University of London and for the Diploma of Impe}},
year = {2014}
}
@inproceedings{Freitag1997OnCL,
author = {Freitag, Lori A},
title = {{On combining Laplacian and optimization-based mesh smoothing techniques}},
year = {1997}
}
@book{book,
abstract = {There are three important steps in the computational modelling of any physical process: (i) problem definition, (ii) mathematical model, and (iii) computer simulation.},
author = {Peir{\'{o}}, Joaquim and Sherwin, Spencer},
booktitle = {Handbook of Materials Modeling},
doi = {10.1007/978-1-4020-3286-8_127},
pages = {2415--2446},
title = {{Finite Difference, Finite Element and Finite Volume Methods for Partial Differential Equations}},
year = {2005}
}
@article{Zhou,
abstract = {We present an effective and easy-to-implement angle-based smoothing scheme for triangular, quadrilateral and tri-quad mixed meshes. For each mesh node our algorithm compares all the pairs of adjacent angles incident to the node and adjusts these angles so that they become equal in the case of a triangular mesh and a quadrilateral mesh, or they form the ideal ratio in the case of a tri-quad mixed mesh. The size and shape quality of the mesh after this smoothing algorithm is much better than that after Laplacian smoothing. The proposed method is superior to Laplacian smoothing by reducing the risk of generating inverted elements and increasing the uniformity of element sizes. The computational cost of our smoothing method is yet much lower than optimization-based smoothing. To prove the effectiveness of this algorithm, we compared errors in approximating a given analytical surface by a set of bi-linear patches corresponding to a mesh with Laplacian smoothing and a mesh with the proposed ...},
author = {Zhou, Tian and Shimada, Kenji},
file = {:C$\backslash$:/Users/elton/Desktop/dissertacao/artigos/angle based approach to smoothing.pdf:pdf},
journal = {Proceedings of the 9th International Meshing Roundtable},
keywords = {average angle,laplacian,mesh smoothing,optimization-based,quadrilateral,triangular},
number = {412},
pages = {373--384},
title = {{An angle-based approach to two-dimensional mesh smoothing}},
year = {2000}
}
@article{Salama,
author = {Hassani, R and Ionescu, I R and Oudet, E},
file = {:C$\backslash$:/Users/elton/Desktop/dissertacao/artigos/A Genetic Algorithm Approach for Optimizing.pdf:pdf},
keywords = {genetic algorithms,mesh generation,unstructured meshes},
pages = {7},
title = {{A genetic algorithm approach for wedged}}
}
@article{winslow1966numerical,
author = {Thompson, J},
journal = {J.Comput.Phys.},
number = {2},
pages = {126--127},
publisher = {Elsevier},
title = {{Numerical solution of the quasilinear Poisson equation in a nonuniform triangle mesh - Introduction}},
volume = {135},
year = {1997}
}
@article{Du1999,
abstract = {A centroidal Voronoi tessellation is a Voronoi tessellation whose generating points are the centroids (centers of mass) of the corresponding Voronoi regions. We give some applica- tions of such tessellations to problems in image compression, quadrature, finite difference methods, distribution of resources, cellular biology, statistics, and the territorial behavior of animals. We discuss methods for computing these tessellations, provide some analyses concerning both the tessellations and the methods for their determination, and, finally, present the results of some numerical experiments.},
author = {Du, Qiang and Faber, Vance and Gunzburger, Max},
doi = {10.1137/s0036144599352836},
file = {:C$\backslash$:/Users/elton/Desktop/dissertacao/artigos/centroidal voronoi tessellations.pdf:pdf},
issn = {0036-1445},
journal = {SIAM Review},
keywords = {1,5202,52b55,62h30,6502,65d30,65u05,65y25,68u05,68u10,Voronoi tessellations,ams subject classifications,centroids,clustering,data compression,given an open set,grid generation,introduction,k,pii,r n,s0036144599352836,the set,v i,vector quantization,voronoi tessellations,$\omega$},
number = {4},
pages = {637--676},
title = {{Centroidal Voronoi Tessellations: Applications and Algorithms}},
volume = {41},
year = {2005}
}
@article{Shewchuk1992,
author = {Shewchuk, Jonathan Richard},
file = {:C$\backslash$:/Users/elton/Desktop/dissertacao/livros/umg.pdf:pdf},
pages = {259--299},
title = {{Unstructured Mesh Generation}},
year = {1992}
}
@misc{Holland1992,
author = {Holland, John H.},
file = {:C$\backslash$:/Users/elton/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Holland - 1992 - Adaptation in natural and artificial systems.pdf:pdf},
title = {{Adaptation in natural and artificial systems}},
year = {1992}
}
@article{doi:10.1080/10407791003685155,
author = {Jureti{\'{c}}, F and Gosman, A D},
doi = {10.1080/10407791003685155},
file = {:C$\backslash$:/Users/elton/Desktop/dinamica dos fluidos computacional/prova2/Juretic{\_}Gosman{\_}2010.pdf:pdf},
journal = {Numerical Heat Transfer, Part B: Fundamentals},
number = {6},
pages = {414--439},
publisher = {Taylor {\&} Francis},
title = {{Error Analysis of the Finite-Volume Method with Respect to Mesh Type}},
volume = {57},
year = {2010}
}
@book{Versteeg2007,
author = {Versteeg, H.K and Malalasekera, W},
booktitle = {Pearson Education Limited},
file = {:C$\backslash$:/Users/elton/Desktop/dinamica dos fluidos computacional/Versteeg{\_}Malalasekera{\_}2ed.pdf:pdf},
isbn = {9780131274983},
title = {{An introduction to computational fluid dynamics}},
volume = {M},
year = {2007}
}
